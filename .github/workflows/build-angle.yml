name: build-angle
on:
  schedule:
    - cron: "0 0 * * 0"
  push:
    branches:
      - main
jobs:
  info:
    runs-on: ubuntu-24.04
    outputs:
      ANGLE_COMMIT: ${{ steps.info.outputs.ANGLE_COMMIT }}
      BUILD_DATE: ${{ steps.info.outputs.BUILD_DATE }}
    steps:
      - name: Get Latest Commit Id
        id: info
        run: |
          echo ANGLE_COMMIT=`git ls-remote https://chromium.googlesource.com/angle/angle HEAD | awk '{ print $1 }'` >> ${GITHUB_OUTPUT}
          echo BUILD_DATE=`date +'%Y-%m-%d'` >> ${GITHUB_OUTPUT}
  
  build-windows:
    runs-on: windows-2022
    needs: info
    strategy:
      fail-fast: false
      matrix:
        arch: [x64, arm64]
    env:
      ANGLE_COMMIT: ${{ needs.info.outputs.ANGLE_COMMIT }}
      BUILD_DATE: ${{ needs.info.outputs.BUILD_DATE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run Build Script
        shell: cmd
        run: call build.cmd ${{ matrix.arch }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: angle-windows-${{ matrix.arch }}-${{ needs.info.outputs.BUILD_DATE }}
          path: angle-${{ matrix.arch }}-${{ needs.info.outputs.BUILD_DATE }}.zip
          if-no-files-found: error
          compression-level: 0
  
  build-other:
    needs: info
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            arch: x64
            os_name: linux
          - os: ubuntu-24.04
            arch: arm64
            os_name: linux
          - os: macos-13
            arch: x64
            os_name: macos
          - os: macos-14
            arch: arm64
            os_name: macos
    runs-on: ${{ matrix.os }}
    continue-on-error: true  # Don't fail the whole workflow if these fail
    env:
      ANGLE_COMMIT: ${{ needs.info.outputs.ANGLE_COMMIT }}
      BUILD_DATE: ${{ needs.info.outputs.BUILD_DATE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Build Placeholder
        run: |
          echo "Build for ${{ matrix.os_name }}-${{ matrix.arch }} not implemented yet"
          echo "Creating placeholder artifact..."
          echo "ANGLE build for ${{ matrix.os_name }}-${{ matrix.arch }} - NOT IMPLEMENTED" > README.txt
          zip angle-${{ matrix.os_name }}-${{ matrix.arch }}-${{ env.BUILD_DATE }}.zip README.txt
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: angle-${{ matrix.os_name }}-${{ matrix.arch }}-${{ needs.info.outputs.BUILD_DATE }}
          path: angle-${{ matrix.os_name }}-${{ matrix.arch }}-${{ needs.info.outputs.BUILD_DATE }}.zip
          if-no-files-found: error
          compression-level: 0
  
  release:
    runs-on: ubuntu-24.04
    needs: [info, build-windows, build-other]
    if: always() && needs.info.result == 'success' && needs.build-windows.result == 'success'
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Create GitHub Release
        run: |
          echo '[angle commit](https://github.com/google/angle/commit/${{ needs.info.outputs.ANGLE_COMMIT }})' >>notes.txt
          gh release create ${{ needs.info.outputs.BUILD_DATE }} -R "${GITHUB_REPOSITORY}" -t '${{ needs.info.outputs.BUILD_DATE }}' -F notes.txt
      
      - name: Get Artifacts From Build Steps
        uses: actions/download-artifact@v4
        with:
          pattern: angle-*-${{ needs.info.outputs.BUILD_DATE }}
          merge-multiple: true
      
      - name: Upload Artifacts to GitHub Release  
        run: |
          for file in angle-*.zip; do
            if [ -f "$file" ]; then
              gh release upload '${{ needs.info.outputs.BUILD_DATE }}' "$file" -R "${GITHUB_REPOSITORY}"
            fi
          done
